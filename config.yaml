# Log Configurations
# log:
#   level: info
#   forceColor: false
#   disableColor: false
#   alertHook: # Alert hooking settings
#     # Hooked logrus level for alert notification
#     level: warn
#     # Default notification channels
#     channels: []
#     # Maximum request timeout allowed to send alert.
#     SendTimeout: 3s
#     # Async worker options for sending alert
#     async:
#       # The number of worker goroutines (set `0` to turn off async mode).
#       numWorkers: 1
#       # The maximum number of queued jobs.
#       queueSize: 60
#       # Maximum timeout allowed to gracefully stop.
#       StopTimeout: 5s


# Alert Configurations
# alert:
#   # Custom tags are used to distinguish between different networks and environments.
#   # For example, they can be used to differentiate between mainnet/testnet, prod/test/dev, etc.
#   customTags: [dev]

#   # Channels are used for sending notifications.
#   # Each channel is identified by a unique key (e.g., channel ID), which is case insensitive.
#   # The value for each key is the configuration for that channel.
#   channels:
#     # Example configuration for the DingTalk robot channel
#     dingrobot:
#       # The type of the channel. In this case, it's 'dingtalk'.
#       platform: dingtalk
#       # The webhook URL for the DingTalk robot.
#       webhook: https://oapi.dingtalk.com/robot/send?access_token=${your_access_token}
#       # The secret key for the DingTalk robot.
#       secret: ${your_access_secret}
#       # List of mobile numbers to be mentioned in the alert. If empty, no one is mentioned.
#       atMobiles: []
#       # If set to true, all members are mentioned in the alert. If false, only the members
#       # in 'atMobiles' are mentioned.
#       isAtAll: false

#     # Example configuration for the Telegram robot channel
#     tgrobot:
#       # The type of the channel. In this case, it's 'telegram'.
#       platform: telegram
#       # The API token for the Telegram robot.
#       apiToken: ${your_api_token}
#       # The chat ID for the Telegram chat where the alerts are sent.
#       chatId: ${your_chat_id}

#     # Example configuration for the SMTP (TLS/SSL only) email channel
#     smtpbot:
#       # The type of the channel. In this case, it's 'smtp'.
#       platform: smtp
#       # The host for the SMTP server (including the port number).
#       host: ${your_smtp_host}
#       # The sender's email address.
#       from: ${your_sender_address}
#       # List of recipient email addresses.
#       to: [${your_recipient_address}]
#       # The password for the SMTP server.
#       password: ${your_smtp_password}


# Blockchain Monitoring Configurations
# blockchain:
#   nodes:
#     # name -> RPC URL
#     node0: http://ip0:8545
#     node1: http://ip1:8545
#     node2: http://ip2:8545
#   interval: 5s
#   availabilityReport:
#     threshold: 1m
#     remind: 5m
#   nodeHeightReport:
#     timedCounterConfig:
#       threshold: 1m
#       remind: 5m
#     maxGap: 30
#   blockchainHeightReport:
#     threshold: 1m
#     remind: 5m
#   validators:
#     # name -> bech32 val format address (prefixed with 0gvaloper)
#     val0: 0gvaloper1hqhdtzuykase0umq5eyzx0u7rq03rjsn2qqwyc
#     val1: 0gvaloper1260xq9mklfplxe28f2w3msrv9cesqt59mj8q2r
#     val2: 0gvaloper12q5dc47ptmdqey6xqck4z7uqtx7g9788cfw2va
#   validatorReport:
#     threshold: 1m
#     remind: 5m
# Storage Service Monitoring Configurations
# storage:
#   nodes:
#     node0: http://ip0:5678
#     node1: http://ip1:5678
#   kvNodes:
#     node0: http://ip0:6789
#     node1: http://ip1:6789
#   interval: 600s
#   storageNodeReport:
#     threshold: 120m
#     remind: 120m
#   dbConfig:
#     username: root
#     password: root
#     host: localhost
#     port: 3306
#     dbName: storage_service
# da:
#   daNodeReport:
#     threshold: 120m
#     remind: 120m
#   daClientReport:
#     threshold: 120m
#     remind: 120m
