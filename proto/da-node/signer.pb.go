// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: signer.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// epoch number of DASigners internal contract
	Epoch uint64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// quorum id of DASigners internal contract
	QuorumId uint64 `protobuf:"varint,2,opt,name=quorum_id,json=quorumId,proto3" json:"quorum_id,omitempty"`
	// erasure commitment generated by encoder
	ErasureCommitment []byte `protobuf:"bytes,3,opt,name=erasure_commitment,json=erasureCommitment,proto3" json:"erasure_commitment,omitempty"`
	// merkle root of data
	StorageRoot []byte `protobuf:"bytes,4,opt,name=storage_root,json=storageRoot,proto3" json:"storage_root,omitempty"`
	// encoded slices of data
	EncodedSlice [][]byte `protobuf:"bytes,5,rep,name=encoded_slice,json=encodedSlice,proto3" json:"encoded_slice,omitempty"`
}

func (x *SignRequest) Reset() {
	*x = SignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequest) ProtoMessage() {}

func (x *SignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequest.ProtoReflect.Descriptor instead.
func (*SignRequest) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{0}
}

func (x *SignRequest) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *SignRequest) GetQuorumId() uint64 {
	if x != nil {
		return x.QuorumId
	}
	return 0
}

func (x *SignRequest) GetErasureCommitment() []byte {
	if x != nil {
		return x.ErasureCommitment
	}
	return nil
}

func (x *SignRequest) GetStorageRoot() []byte {
	if x != nil {
		return x.StorageRoot
	}
	return nil
}

func (x *SignRequest) GetEncodedSlice() [][]byte {
	if x != nil {
		return x.EncodedSlice
	}
	return nil
}

type BatchSignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*SignRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchSignRequest) Reset() {
	*x = BatchSignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSignRequest) ProtoMessage() {}

func (x *BatchSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSignRequest.ProtoReflect.Descriptor instead.
func (*BatchSignRequest) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{1}
}

func (x *BatchSignRequest) GetRequests() []*SignRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchSignReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// signatures for requests
	Signatures [][]byte `protobuf:"bytes,1,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *BatchSignReply) Reset() {
	*x = BatchSignReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSignReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSignReply) ProtoMessage() {}

func (x *BatchSignReply) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSignReply.ProtoReflect.Descriptor instead.
func (*BatchSignReply) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{2}
}

func (x *BatchSignReply) GetSignatures() [][]byte {
	if x != nil {
		return x.Signatures
	}
	return nil
}

type RetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// epoch number of DASigners internal contract
	Epoch uint64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// quorum id of DASigners internal contract
	QuorumId uint64 `protobuf:"varint,2,opt,name=quorum_id,json=quorumId,proto3" json:"quorum_id,omitempty"`
	// merkle root of data
	StorageRoot []byte `protobuf:"bytes,3,opt,name=storage_root,json=storageRoot,proto3" json:"storage_root,omitempty"`
	// required row indexes
	RowIndexes []uint32 `protobuf:"varint,4,rep,packed,name=row_indexes,json=rowIndexes,proto3" json:"row_indexes,omitempty"`
}

func (x *RetrieveRequest) Reset() {
	*x = RetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveRequest) ProtoMessage() {}

func (x *RetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveRequest.ProtoReflect.Descriptor instead.
func (*RetrieveRequest) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{3}
}

func (x *RetrieveRequest) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *RetrieveRequest) GetQuorumId() uint64 {
	if x != nil {
		return x.QuorumId
	}
	return 0
}

func (x *RetrieveRequest) GetStorageRoot() []byte {
	if x != nil {
		return x.StorageRoot
	}
	return nil
}

func (x *RetrieveRequest) GetRowIndexes() []uint32 {
	if x != nil {
		return x.RowIndexes
	}
	return nil
}

type BatchRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*RetrieveRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchRetrieveRequest) Reset() {
	*x = BatchRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRetrieveRequest) ProtoMessage() {}

func (x *BatchRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRetrieveRequest.ProtoReflect.Descriptor instead.
func (*BatchRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{4}
}

func (x *BatchRetrieveRequest) GetRequests() []*RetrieveRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type Slices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncodedSlice [][]byte `protobuf:"bytes,1,rep,name=encoded_slice,json=encodedSlice,proto3" json:"encoded_slice,omitempty"`
}

func (x *Slices) Reset() {
	*x = Slices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slices) ProtoMessage() {}

func (x *Slices) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slices.ProtoReflect.Descriptor instead.
func (*Slices) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{5}
}

func (x *Slices) GetEncodedSlice() [][]byte {
	if x != nil {
		return x.EncodedSlice
	}
	return nil
}

type BatchRetrieveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// required encoded slices
	EncodedSlice []*Slices `protobuf:"bytes,1,rep,name=encoded_slice,json=encodedSlice,proto3" json:"encoded_slice,omitempty"`
}

func (x *BatchRetrieveReply) Reset() {
	*x = BatchRetrieveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchRetrieveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRetrieveReply) ProtoMessage() {}

func (x *BatchRetrieveReply) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRetrieveReply.ProtoReflect.Descriptor instead.
func (*BatchRetrieveReply) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{6}
}

func (x *BatchRetrieveReply) GetEncodedSlice() []*Slices {
	if x != nil {
		return x.EncodedSlice
	}
	return nil
}

type StatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode uint64 `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
}

func (x *StatusReply) Reset() {
	*x = StatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusReply) ProtoMessage() {}

func (x *StatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusReply.ProtoReflect.Descriptor instead.
func (*StatusReply) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{7}
}

func (x *StatusReply) GetStatusCode() uint64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{8}
}

var File_signer_proto protoreflect.FileDescriptor

var file_signer_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0xb7, 0x01, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09,
	0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x65, 0x72, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x22, 0x43, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x30, 0x0a, 0x0e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x12, 0x1b, 0x0a, 0x09, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x6f,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x22, 0x4b, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22,
	0x2d, 0x0a, 0x06, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x22, 0x49,
	0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x0d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f,
	0x73, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x52, 0x0c, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x22, 0x2e, 0x0a, 0x0b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x32, 0xc9, 0x01, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x3f, 0x0a,
	0x09, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x18, 0x2e, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b,
	0x0a, 0x0d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12,
	0x1c, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x09,
	0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_signer_proto_rawDescOnce sync.Once
	file_signer_proto_rawDescData = file_signer_proto_rawDesc
)

func file_signer_proto_rawDescGZIP() []byte {
	file_signer_proto_rawDescOnce.Do(func() {
		file_signer_proto_rawDescData = protoimpl.X.CompressGZIP(file_signer_proto_rawDescData)
	})
	return file_signer_proto_rawDescData
}

var file_signer_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_signer_proto_goTypes = []any{
	(*SignRequest)(nil),          // 0: signer.SignRequest
	(*BatchSignRequest)(nil),     // 1: signer.BatchSignRequest
	(*BatchSignReply)(nil),       // 2: signer.BatchSignReply
	(*RetrieveRequest)(nil),      // 3: signer.RetrieveRequest
	(*BatchRetrieveRequest)(nil), // 4: signer.BatchRetrieveRequest
	(*Slices)(nil),               // 5: signer.Slices
	(*BatchRetrieveReply)(nil),   // 6: signer.BatchRetrieveReply
	(*StatusReply)(nil),          // 7: signer.StatusReply
	(*Empty)(nil),                // 8: signer.Empty
}
var file_signer_proto_depIdxs = []int32{
	0, // 0: signer.BatchSignRequest.requests:type_name -> signer.SignRequest
	3, // 1: signer.BatchRetrieveRequest.requests:type_name -> signer.RetrieveRequest
	5, // 2: signer.BatchRetrieveReply.encoded_slice:type_name -> signer.Slices
	1, // 3: signer.Signer.BatchSign:input_type -> signer.BatchSignRequest
	4, // 4: signer.Signer.BatchRetrieve:input_type -> signer.BatchRetrieveRequest
	8, // 5: signer.Signer.GetStatus:input_type -> signer.Empty
	2, // 6: signer.Signer.BatchSign:output_type -> signer.BatchSignReply
	6, // 7: signer.Signer.BatchRetrieve:output_type -> signer.BatchRetrieveReply
	7, // 8: signer.Signer.GetStatus:output_type -> signer.StatusReply
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_signer_proto_init() }
func file_signer_proto_init() {
	if File_signer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_signer_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*BatchSignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*BatchSignReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*BatchRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Slices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*BatchRetrieveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*StatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_signer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_signer_proto_goTypes,
		DependencyIndexes: file_signer_proto_depIdxs,
		MessageInfos:      file_signer_proto_msgTypes,
	}.Build()
	File_signer_proto = out.File
	file_signer_proto_rawDesc = nil
	file_signer_proto_goTypes = nil
	file_signer_proto_depIdxs = nil
}
